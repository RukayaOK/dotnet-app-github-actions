#
name: Pull Request Workflow
on:
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

# on pr - run lint, tests, checkov in parellel 
jobs:
  lint:
    runs-on: ubuntu-latest

    steps:

        # Checkout the Repository
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
        


  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
        npm install
        npm test


jobs:
  pull-request:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x' # SDK Version to use; x will use the latest version of the 5.0 channel

    # Format the output of dotnet format
    - name: Add dotnet-format problem matcher
      uses: xt0rted/dotnet-format-problem-matcher@v1

    # Install dotnet format as a global tool
    - name: Install dotnet format
      run: dotnet tool update --global dotnet-format

    # Run dotnet format --dry-run --check
    # By default, the task ensure the exit code is 0
    # If a file needs to be edited by dotnet format, the exit code will be a non-zero value
    # So the task will fail
    - name: Run dotnet format
      run: dotnet format --check --verbosity diagnostic
    
            # - name: Run Checkov action
        #   id: checkov
        #   uses: bridgecrewio/checkov-action@master
        #   with:
        #     #quiet: true # optional: display only failed checks
        #     #soft_fail: true # optional: do not return an error code if there are failed checks
        #     log_level: DEBUG # optional: set log level. Default WARNING
        #     docker_image: ${{ env.IMAGE_NAME }} # define the name of the image to scan
        #     dockerfile_path: ${{ format('{0}/Dockerfile', env.IMAGE_PATH) }} # path to the Dockerfile
        #     container_user: 1000 # optional: Define what UID and / or what GID to run the container under to prevent permission issues
